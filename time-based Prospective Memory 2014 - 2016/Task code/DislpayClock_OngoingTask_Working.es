[WARNING]
WARNING: DO NOT EDIT THIS FILE DIRECTLY!
Use only E-Studio to edit this file.
Editing of this file from any other means is not supported
and may corrupt the experiment design specification.
Technical support will not be able to address any issue in
regards to this file format.

[Experiment]
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_VersionPersist=6
Root="SessionProc"
Author="  (PST)"
Abstract="Abstract\r\nThis example demonstrates how to display a count-down timer to the subject using an \r\nInLine script object after a stimulus has been displayed for a specific amount of time.\r\n\r\nThe Stimulus object contains two SlideText sub-objects - one to display the stimulus, \r\nand another to display the countdown clock. The SlideText used to display the \r\ncountdown clock is blank by default; its Text property will be adjusted in the \r\nGetResponse InLine script if necessary.\r\n\r\nThe GetResponse script loops continuously until either the subject responds \r\n(determined using the IsPending method of the Stimulus object) or the Stimulus has \r\nbeen displayed for the desired maximum duration. Inside the loop, the script checks to \r\nsee if the Stimulus has been displayed for over 5 seconds. If so, the Text property of \r\nthe second Stimulus SlideText is changed to display the countdown clock.\r\n"
Notes=""
Creation=1386352700

[Device0]
_VersionPersist=1
OpenDevice=1
Width=800
Height=600
Bpp=16
Name="Display"
Class="Display"

[Device1]
_VersionPersist=1
OpenDevice=0
Channels=2
Samples=22050
Bps=16
Name="Sound"
Class="Sound"

[Device2]
_VersionPersist=1
OpenDevice=1
CollectionMode=1
EmulateDeviceName=""
CapsLock=0
NumLock=1
Name="Keyboard"
Class="Keyboard"

[Device3]
_VersionPersist=1
OpenDevice=1
CollectionMode=1
EmulateDeviceName=""
OpenMode=0
ShowCursor=0
Name="Mouse"
Class="Mouse"

[DataFile]
WarnBeforeOverwrite=1
WarnIfConvertFailed=1
RemoveERecoveryFile=0
ReceiveFeedbackDuringDataFileConversion=1
LogLevel(2).Name="Block"
LogLevel(3).Name="Trial"
LogLevel(4).Name="SubTrial"
LogLevel(5).Name="LogLevel5"
LogLevel(6).Name="LogLevel6"
LogLevel(7).Name="LogLevel7"
LogLevel(8).Name="LogLevel8"
LogLevel(9).Name="LogLevel9"
LogLevel(10).Name="LogLevel10"

[StartupInfo]
DisplaySummary=1
UseDefaults=0

[StartupInfo1]
Name="Subject"
Prompt="Please enter the Subject Number (1-32767, 0=No Data Logging):"
DataType=0
Enabled=1
PromptEnabled=1
Default="1"
Min=0
Max=32767
PrivateFlags=268435477
PrivateInfo=1

[StartupInfo2]
Name="Session"
Prompt="Please enter the Session Number (1-32767):"
DataType=0
Enabled=1
PromptEnabled=1
Default="1"
Min=1
Max=32767
PrivateFlags=268435477
PrivateInfo=1

[StartupInfo3]
Name="Group"
Prompt="Please enter Subject's Group (0-32767):"
DataType=0
Enabled=0
PromptEnabled=0
Default="1"
Min=0
Max=32767

[StartupInfo4]
Name="Name"
Prompt="Please enter Subject's Name:"
DataType=1
Enabled=0
PromptEnabled=0
Default=""
MaxLength=255

[StartupInfo5]
Name="Age"
Prompt="Please enter Subject's Age (0-150):"
DataType=0
Enabled=0
PromptEnabled=0
Default="0"
Min=0
Max=150

[StartupInfo6]
Name="Sex"
Prompt="Please enter Subject's Sex:"
DataType=2
Enabled=0
PromptEnabled=0
Default="male"
Choice(1).Value="male"
Choice(2).Value="female"

[StartupInfo7]
Name="Handedness"
Prompt="Enter Subject's Handedness:"
DataType=2
Enabled=0
PromptEnabled=0
Default="left"
Choice(1).Value="left"
Choice(2).Value="right"

[StartupInfo8]
Name="ResearcherID"
Prompt="Please enter Researcher's ID:"
DataType=0
Enabled=0
PromptEnabled=0
Default="1"
Min=0
Max=32767

[Object0]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_ItemList="Hello;BlockList;Goodbye"
_VersionPersist=1
FlowLines(0).Count=3
FlowLines(0).FlowItem(0).Name="Hello"
FlowLines(0).FlowItem(1).Name="BlockList"
FlowLines(0).FlowItem(2).Name="Goodbye"
LogData=1
Name="SessionProc"
TypeName="Procedure"
Tag=""
Notes=""

[Object1]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_ItemList="BlockProc"
_VersionPersist=1
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Order=0
OrderBy=0
ResetEveryRun=0
HideLevelsWithZeroWeight=0
CycleDef=0
CycleValueSamples=0
CycleValueCondition=""
ExitDef=0
ExitValueCycles=1
ExitValueSamples=1
ExitValueSeconds=0
ExitValueCondition=""
LoadMethod=0
Filename=""
UserAttributes=0
Attributes("Weight").DefaultValue="1"
Attributes("Weight").Visible=1
Attributes("Weight").Width=75
Attributes("Weight").OrderIndex=0
Attributes("Nested").DefaultValue=""
Attributes("Nested").Visible=1
Attributes("Nested").Width=75
Attributes("Nested").OrderIndex=1
Attributes("Procedure").DefaultValue="BlockProc"
Attributes("Procedure").Visible=1
Attributes("Procedure").Width=75
Attributes("Procedure").OrderIndex=2
Levels=1
Levels(1).ValueString="1\t\tBlockProc\t"
Name="BlockList"
TypeName="List"
Tag=""
Notes=""

[Object2]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_ItemList="TrialInstructions;ClockSlide;TrialList"
_VersionPersist=1
FlowLines(0).Count=3
FlowLines(0).FlowItem(0).Name="TrialInstructions"
FlowLines(0).FlowItem(1).Name="ClockSlide"
FlowLines(0).FlowItem(2).Name="TrialList"
LogData=1
Name="BlockProc"
TypeName="Procedure"
Tag=""
Notes=""

[Object3]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("Word").Log=-1
Logging("CorrectResponse").Log=-1
_ItemList="TrialProc"
_VersionPersist=1
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Order=0
OrderBy=0
ResetEveryRun=0
HideLevelsWithZeroWeight=0
CycleDef=0
CycleValueSamples=0
CycleValueCondition=""
ExitDef=0
ExitValueCycles=1
ExitValueSamples=1
ExitValueSeconds=0
ExitValueCondition=""
LoadMethod=0
Filename=""
UserAttributes=2
Attributes("Weight").DefaultValue="1"
Attributes("Weight").Visible=1
Attributes("Weight").Width=75
Attributes("Weight").OrderIndex=0
Attributes("Nested").DefaultValue=""
Attributes("Nested").Visible=1
Attributes("Nested").Width=75
Attributes("Nested").OrderIndex=1
Attributes("Procedure").DefaultValue="TrialProc"
Attributes("Procedure").Visible=1
Attributes("Procedure").Width=75
Attributes("Procedure").OrderIndex=2
Attributes(1).Name="Word"
Attributes(1).DefaultValue="?"
Attributes(1).VarType=8
Attributes(1).VarTypeInternal=8
Attributes(1).Visible=1
Attributes(1).Width=75
Attributes(2).Name="CorrectResponse"
Attributes(2).DefaultValue="?"
Attributes(2).VarType=8
Attributes(2).VarTypeInternal=8
Attributes(2).Visible=1
Attributes(2).Width=75
Levels=7
Levels(1).ValueString="1\t\tTrialProc\tHouse\t\t"
Levels(2).ValueString="1\t\tTrialProc\tDog\tn\t"
Levels(3).ValueString="1\t\tTrialProc\tCat\tm\t"
Levels(4).ValueString="1\t\tTrialProc\tGlass\tn\t"
Levels(5).ValueString="1\t\tTrialProc\tRed\tn\t"
Levels(6).ValueString="1\t\tTrialProc\tYellow\tm\t"
Levels(7).ValueString="1\t\tTrialProc\tBlue\tm\t"
Name="TrialList"
TypeName="List"
Tag=""
Notes=""

[Object4]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_ItemList="ShowWords;MaskDelayANDClock"
_VersionPersist=1
FlowLines(0).Count=2
FlowLines(0).FlowItem(0).Name="ShowWords"
FlowLines(0).FlowItem(1).Name="MaskDelayANDClock"
LogData=1
Name="TrialProc"
TypeName="Procedure"
Tag=""
Notes=""

[Object5]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_VersionPersist=1
Code="\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n'\t\t\t\t\t\tLOOP UNTIL MAX TIME HAS EXPIRED (2 seconds)\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\nDo\n\n\t'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n\t'\t\t\tVARIABLE DECLARATIONS AND SETTINGS\n\t'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n\n\n\t'set time when stimulus (ShowWords)was presented\n\tDim lnStimOnset as Long\n\tlnStimOnset = ShowWords.OnsetTime\n\t'Debug.Print \"============================================\"\n\t'Debug.Print \"trial begins at \" & lnStimOnset\n\n\t'set maximum time of stimulus (ShowWord) presentation\n\tDim MaskWord as Long\n\tMaskWord = lnStimOnset + 500\n\t'Debug.Print \"time to hide the word \" & MaskWord\n\n\t'set maximum time for trial \n\tDim endTime as Long\n\tendTime = lnStimOnset + 2000\n\t'Debug.Print \"time to finish the trial \" & endTime\n\n\t'Declare variables for displaying the clock\n\t'Set the start time of the ClockSlide object\n\tDim lnStartTime as Long\n\tlnStartTime = ClockSlide.OnsetTime\n\t'Debug.Print \"Start time is \" & lnStartTime\n\n\tDim lnCountTime as Long 'count the time in milliseconds\n\tDim lnMinutes as Double 'variable to show time in minutes\n\tDim lnSeconds as Long   'variable to show time in seconds\n\n\t'Get access to the Text2 SlideText object in order to \n\t'place text and redraw the object (update time)\n\tDim T as SlideText\n\tSet T = CSlideText(ClockSlide.States.Item(\"Default\").Objects(\"Text\"))\n\n\t'Global variables to detect multiple responses are defined in the user script\n\t'Create object to collect responses from ClockSlide\n\tDim theResponseObject As RteRunnableInputObject\n\tSet theResponseObject = CRteRunnableInputObject(Rte.GetObject(\"ClockSlide\"))\n\n\t' If the assert below fires, then the object named in the line above does not exist\n\tDebug.Assert Not theResponseObject Is Nothing\n\n\n\t'==================================================================\n\t' Clear Stimulus presentation after 500ms\n\t'==================================================================\t\n\tIf Clock.Read >= MaskWord Then\n\t\tShowWords.Clear\n\t\t'Debug.Print \"word cleared at time \" & Clock.Read\n\tEnd If\n\n\t'==================================================================\n\t' Detect new response for clock (time check)\n\t'==================================================================\t\n\n\n\tDim nIndex as Integer \n\t' Update counter \n\tnIndex = theResponseObject.InputMasks.Responses.Count\n\n\t'If the counts do not match, there is a response to process\n\tIf nIndex <> CompareIndex Then\n\t\tDebug.Print \"nIndex = \" & nIndex\n\t\tDebug.Print \"CompareIndex = \" & CompareIndex\n\t\t \n\t\tDebug.Print \"--------------- clock response detection ----------------\"\n\t\tDebug.Print \"EXECUTE CLOCK CODE FOR THE \" & nIndex & \" TIME\" \n\t\t'Debug.Print \"trial begins at \" & lnStimOnset\n\t\tDebug.Print \"the word is cleared at \" & MaskWord\n\t\tDebug.Print \"trial ends at \" & endTime\n\n\t\t'Declare variables to show and hide the clock - Global variables see user script\n\t\t'Dim lnShowClock as Long\n\t\t'Dim lnHideClock as Long\n\t\n\t\t' Declare objects to store Response data \n\t\tDim theKeyboardResponseData As KeyboardResponseData\n\t\tDim theKeyboardPreviousResponseData As KeyboardResponseData\n\t\n\t\t'Set theKeyboardResponseData equal to the current keyboard response\n\t\tSet theKeyboardResponseData = CKeyboardResponseData(theResponseObject.InputMasks.Responses(nIndex))\n\t\t\n\t\t' Make Compare Index equal to nIndex (to be able to detect a new response)\t\n\t\tCompareIndex = nIndex\n\t\tDebug.Print \"nIndex2 = \" & nIndex\n\t\tDebug.Print \"compareIndex2 = \" & CompareIndex\n\n\t'==================================================================\n\t' Store time check Responses\n\t'==================================================================\n\t\t\n\t\t'Log reaction time and response for each key press.\t\n\t\tIf Not theKeyboardResponseData Is Nothing Then\n\t\t\tc.SetAttrib \"ClockCheck.RT\", theKeyboardResponseData.RT\n\t\t\tc.SetAttrib \"ClockCheck.RTTime\", theKeyboardResponseData.RTTime\n\t\t\tc.SetAttrib \"ClockCheck.RESP\", theKeyboardResponseData.RESP\n\t\tEnd If\n\t\t\n\t\tDebug.Print \"c is pressed at \" & theKeyboardResponseData.RTTime\n\t\t'Debug.Print \"RESP \" & theKeyboardResponseData.RESP\n\t\t'Debug.Print \"RT \" & theKeyboardResponseData.RT\n\n\t\tlnShowClock = theKeyboardResponseData.RTTime\n\t\tlnHideClock = theKeyboardResponseData.RTTime + 1000\n\t\tDebug.Print \"Clock should be shown at \" & lnShowClock\n\t\tDebug.Print \"Clock should be gone at \" & lnHideClock\n\n\n\n\t\tset theKeyboardResponseData = nothing ' I do these to prevent errors (I read somewhere) \n\t\tSet theResponseObject = Nothing ' I do these to prevent errors (I read somewhere) \n \n\n\t\t'Debug.Print \"compare index is \" & CompareIndex\n\t    'Debug.Print \"current index is \" & nIndex\n\n\n\t'==================================================================\n\t' update clock if new response\n\t'==================================================================\t\n\t\t'Debug.Print \"---------------- time update ------------------------ \"\t\t\n\n\t\t'Calculate the amount of time in seconds\n\t\tlnCountTime = (Clock.Read - lnStartTime) / 1000 ' \n\t\t\n\t\t'Calculates minutes and seconds to display\n\t\tIf lnCountTime >= 60 Then\n\t\t\tlnMinutes = lnCountTime/60\n\t\t\tlnMinutes = fix(lnMinutes) 'give the interger part of minutes\n\t\t\tlnSeconds = lnCountTime - (lnMinutes*60)\n\t\t\t\n\t\tElse\n\t\t\tlnMinutes = 0\n\t\t\tlnSeconds = lnCountTime\n\n\t\tEnd If\n\t\t\n\t\t'Display the clock in format MM:SS\n\t\tIf Len(Cstr(lnMinutes))=1 AND Len(Cstr(lnSeconds)) =1  Then\n\t\t\tT.Text = \"0\" & lnMinutes & \":0\" & lnSeconds\n\t\tElseIf Len(Cstr(lnMinutes))=1 AND Len(Cstr(lnSeconds)) =2  Then\n\t\t\tT.Text = \"0\" & lnMinutes & \":\" & lnSeconds\n\t\tElseIf Len(Cstr(lnMinutes))=2 AND Len(Cstr(lnSeconds)) =2  Then\n\t\t\tT.Text = lnMinutes & \":\" & lnSeconds\n\t\tElseIf Len(Cstr(lnMinutes))=2 AND Len(Cstr(lnSeconds)) =1  Then\n\t\t\tT.Text = lnMinutes & \":0\" & lnSeconds \n\t\tEnd If\n\t\n\t'==================================================================\n\t' show clock\n\t'==================================================================\t\n\t\t'Force a redraw on the ClockSlide (show the new text with updated mintes:seconds)\n\t\tT.Draw\n\t\tDebug.Print \"Clock is Redrawn at \" & Clock.Read\n\t\t'lnHideClock = Clock.Read + 1000 \t\t\t\n\t\t\n\t\t'Debug.Print \"------------------ end time update -----------------\"\t\n\n\n\tEnd If\n\n\t'==================================================================\n\t' clear clock\n\t'==================================================================\t\n\t\t\n\tIf lnHideClock <> 0 AND Clock.Read >= lnHideClock Then\n\t\tT.Clear\n\t\tlnHideClock = 0\n\t\tDebug.Print \"Clock is cleared at \" & Clock.Read\n\t\t\n\t\t'Reset the .TEXT property of T2\n\t\tT.Text = \"\"\n\t\t'Release references\n\t\tSet T = Nothing \n\t\tDebug.Print \"------------------ end clock code -----------------\"\t\n\tEnd if \n\n\nLoop Until Clock.Read >= endTime\nDebug.Print \"trial ends at \" & Clock.Read\t\nDebug.Print \"============================================\"\n"
Name="MaskDelayANDClock"
TypeName="InLine"
Tag=""
Notes=""

[Object6]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
Input(0)=!Data0
_VersionPersist=2
ActiveState="Default"
States.Count=1
States(1).Name="Default"
States("Default").X="center"
States("Default").Y="top"
States("Default").Width="100%"
States("Default").Height="100%"
States("Default").XAlign="center"
States("Default").YAlign="top"
States("Default").BackColor="white"
States("Default").BackStyle="opaque"
States("Default").BorderColor="black"
States("Default").BorderWidth="0"
States("Default").ClearAfter="No"
States("Default").Enabled="Yes"
States("Default").ChildCount=1
States("Default").Objects(1).Type="Text"
States("Default").Objects(1).Text=""
States("Default").Objects(1).Width="100%"
States("Default").Objects(1).Height="25%"
States("Default").Objects(1).X="center"
States("Default").Objects(1).Y="13%"
States("Default").Objects(1).AlignHorizontal="center"
States("Default").Objects(1).AlignVertical="center"
States("Default").Objects(1).FontName="Courier New"
States("Default").Objects(1).FontSize="18"
States("Default").Objects(1).FontBold="Yes"
States("Default").Objects(1).FontUnderline="No"
States("Default").Objects(1).FontStrikeout="No"
States("Default").Objects(1).FontItalic="No"
States("Default").Objects(1).ForeColor="black"
States("Default").Objects(1).BackColor="white"
States("Default").Objects(1).BackStyle="opaque"
States("Default").Objects(1).BorderWidth="0"
States("Default").Objects(1).BorderColor="black"
States("Default").Objects(1).XAlign="center"
States("Default").Objects(1).YAlign="center"
States("Default").Objects(1).WordWrap=1
States("Default").Objects(1).Name="Text"
Duration="0"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="ClockSlide"
TypeName="Slide"
Tag=""
Notes="The Duration property of the Stimulus object is set to 0 so that the InLine script executes\r\nimmediately after the Stimulus is drawn. The Response Time Limit is set to infinite so\r\nthe Stimulus object stays on screen while the InLine object is executing. The actual \r\nresponse time will be determined by the InLine script.\r\n\r\nThe SlideText sub-object Text2 will be controlled by the InLine script. A\r\nSlideText variable is declared in the script, and the the content of the Text property\r\nis set according to the time remaining."

[Data0]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="cq"
CorrectInput=""
TimeLimit="-1"
MaxCount="1000"
InputAction=0
SyncOwnerDuration=0
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="Yes"

[Object7]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Text="The trial is over..."
ForeColor="black"
BackColor="white"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="18"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="2000"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="EndofTrial"
TypeName="TextDisplay"
Tag=""
Notes=""

[Object8]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
Input(0)=!Data1
_VersionPersist=1
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Text="Hello and welcome to the experiment.\n\nPress any key to begin."
ForeColor="black"
BackColor="white"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="18"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="-1"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="Hello"
TypeName="TextDisplay"
Tag=""
Notes=""

[Data1]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="{ANY}"
CorrectInput=""
TimeLimit=""
MaxCount="1"
InputAction=1
SyncOwnerDuration=1
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="Yes"

[Object9]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Text="Thank you and goodbye."
ForeColor="black"
BackColor="white"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="18"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="1000"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="Goodbye"
TypeName="TextDisplay"
Tag=""
Notes=""

[Object10]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
Input(0)=!Data2
_VersionPersist=1
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Text="You will perfom a word categorisation plus\na time check task\n\nPress \"n\" if the word on the screen does not belong to the same category of to the previous word \n\nPress \"m\" if the category of the word on the screen matches with the previous word\n\nPress \"c\" to display a clock\nat the top of the screen\n\nPress any key to start\n\n\n"
ForeColor="black"
BackColor="white"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="18"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="-1"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="TrialInstructions"
TypeName="TextDisplay"
Tag=""
Notes=""

[Data2]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="{ANY}"
CorrectInput=""
TimeLimit=""
MaxCount="1"
InputAction=1
SyncOwnerDuration=1
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="Yes"

[Object11]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=-1
Logging("ACC").Log=-1
Logging("RT").Log=-1
Logging("RESP").Log=-1
Logging("CRESP").Log=-1
Logging("Tag").Log=0
Input(0)=!Data3
_VersionPersist=1
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Text="[Word]"
ForeColor="black"
BackColor="white"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="50%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="18"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="0"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="ShowWords"
TypeName="TextDisplay"
Tag=""
Notes=""

[Data3]
DeviceName="Keyboard"
DeviceClass="Keyboard"
AllowableInput="mn"
CorrectInput="[CorrectResponse]"
TimeLimit="2000"
MaxCount="1"
InputAction=0
SyncOwnerDuration=0
Enabled=1
FlushInputBuffer="Yes"
TerminationInput=""
UserTag=""
ResponseMode="All"
ProcessBackspace="Yes"

[Object12]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=2
ActiveState="Default"
States.Count=1
States(1).Name="Default"
States("Default").X="center"
States("Default").Y="center"
States("Default").Width="100%"
States("Default").Height="100%"
States("Default").XAlign="center"
States("Default").YAlign="center"
States("Default").BackColor="white"
States("Default").BackStyle="opaque"
States("Default").BorderColor="black"
States("Default").BorderWidth="0"
States("Default").ClearAfter="No"
States("Default").Enabled="Yes"
States("Default").ChildCount=0
Duration="1000"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="Slide1"
TypeName="Slide"
Tag=""
Notes=""

[Object13]
_Version=65536
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Logging("OnsetDelay").Log=0
Logging("OnsetTime").Log=0
Logging("DurationError").Log=0
Logging("PreRelease").Log=0
Logging("Duration").Log=0
Logging("StartTime").Log=0
Logging("OffsetTime").Log=0
Logging("FinishTime").Log=0
Logging("TimingMode").Log=0
Logging("CustomOnsetTime").Log=0
Logging("CustomOffsetTime").Log=0
Logging("ActionDelay").Log=0
Logging("ActionTime").Log=0
Logging("TargetOffsetTime").Log=0
Logging("TargetOnsetTime").Log=0
Logging("OffsetDelay").Log=0
Logging("RTTime").Log=0
Logging("ACC").Log=0
Logging("RT").Log=0
Logging("RESP").Log=0
Logging("CRESP").Log=0
Logging("Tag").Log=0
_VersionPersist=1
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
Text=""
ForeColor="black"
BackColor="white"
BackStyle="opaque"
BorderColor="black"
BorderWidth="0"
X="center"
Y="center"
Width="100%"
Height="100%"
XAlign="center"
YAlign="center"
AlignHorizontal="center"
AlignVertical="center"
FontName="Courier New"
FontSize="18"
FontBold="Yes"
FontItalic="No"
FontUnderline="No"
FontStrikeout="No"
WordWrap=1
ClearAfter="No"
Duration="0"
JumpLabel=""
TimingMode=0
PreRelease="0"
OnsetSync=1
OffsetSync=0
Name="DelayMask"
TypeName="TextDisplay"
Tag=""
Notes=""

[Object14]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_VersionPersist=1
Code="Dim lnStartTime1 as Long\nlnStartTime1 = ShowClock.OnsetTime\nDebug.Print \"Time onset 1 \" & lnStartTime1"
Name="getTimeOnSet"
TypeName="InLine"
Tag=""
Notes=""

[Object15]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_VersionPersist=1
Code="\n' THE PROBLEM WITH THE FOLLOWING PIECE OF CODE IS THAT IT ONLY RUNS\n' AT THE END OF THE TRIALPROC SO IT SHOWS AND HIDE CLOCK \n\n'Dim lnShowClockStartTime as Long\n'Dim lnShowClockEndTime as Long\n\n'Dim nClicks As Integer 'number of responses\n'Dim ifWasClicked As integer\n'Dim ifWasClicked As ResponseDataCollection\n\n\n'ifWasClicked = 0\n'nClicks = ClockSlide.InputMasks(1).Responses.Count\n'set ifWasClicked = ClockSlide.InputMasks(1).Responses\n\n' Detect if the key \"c\" was pressed. change height of slides if it is so\n'If theKeyboardResponseData.RESP = \"c\" Then\n'If ifWasClicked > 0 Then\n'\tDebug.Print \"clock time when c was pressed: \" & lnMinutes & \":\" &lnSeconds \n'\tDebug.Print \"c was pressed at time: \" & ClockSlide.RTTime\n\n\t\n'\tlnShowClockStartTime = Clock.Read\n'\tDebug.Print \"Time it shows clock \" & lnShowClockStartTime\n\n\n'\tlnShowClockEndTime = lnShowClockStartTime + 1000\n'\tDebug.Print \"Time clock should dissapear \" & lnShowClockEndTime\n\n'\tShowWords.Height = \"50%\" '\"100%\"\n'\tShowWords.Y = \"bottom\" '\"center\"\n'\tShowWords.YAlign = \"bottom\" '\"center\"\n'\tShowWords.AlignVertical = \"top\" '\"center\"\n\n'\tDelayMask.Height = \"50%\" '\"100%\" \n'\tDelayMask.Y = \"bottom\" '\"center\"\n'\tDelayMask.YAlign = \"bottom\" '\"center\"\n'\tDelayMask.AlignVertical = \"top\" '\"center\"\n\n\t'Reset c to none in ClockSlide to allow receive a new response\n\t' The line below doesn't work as I want\n'\tClockSlide.RESP = \" \" ' this work only to hide the clock but doesn't allow for a new response \n\t\n\t'ClockSlide.InputMasks.IsPending() = true\n\t'ifWasClicked = 0\n\n\t\n'End If\n\n\n"
Name="DisplayClock"
TypeName="InLine"
Tag=""
Notes=""

[Object16]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_VersionPersist=1
Code="' Restore height of the slides to hide clock\n'If ShowWords.Height = \"50%\" AND Clock.Read > lnShowClockEndTime Then\n'\tDebug.Print \"Time clock is gone \" & Clock.Read\n'\tShowWords.Height = \"100%\"\n'\tShowWords.Y = \"center\"\n'\tShowWords.YAlign = \"center\"\n'\tShowWords.AlignVertical = \"center\"\n\n'\tDelayMask.Height = \"100%\" \n'\tDelayMask.Y = \"center\"\n'\tDelayMask.YAlign = \"center\"\n'\tDelayMask.AlignVertical = \"center\"\n\n'End If"
Name="HideClock"
TypeName="InLine"
Tag=""
Notes=""

[Object17]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_VersionPersist=1
Code="\tDebug.Print \"+++++++++++++++++++++++++++++++++++++\"\n\t\n\tDim theResponseObject As RteRunnableInputObject\n\tSet theResponseObject = CRteRunnableInputObject(Rte.GetObject(\"ClockSlide\"))\n\n\t'If the assert below fires, then the object named in the line above does not exist\n\tDebug.Assert Not theResponseObject Is Nothing\n\n\t'Counter variable for the number of responses made\n\tDim nPressCount As Long\n\n\t'Counter variable\n\tDim nIndex as Integer\n\n\t'Used to set attributes for statistics\n\t'Dim strStatistic As String\n\t\n\t'Enumerate through the response collection \n\t'If any of the responses were made by the keyboard, display\n\t'the statistics to the user.\t\n\tFor nIndex = 1 To theResponseObject.InputMasks.Responses.Count\n\tDebug.Print \"----------------- begin ------------------\"\n\tDebug.Print theResponseObject.InputMasks.Responses.Count\n\tDebug.Print \"index number \" & nIndex\n\tDebug.Print \"press number before sum \" & nPressCount\n\n  \n\t\t'Set theKeyboardResponseData equal to the current keyboard response\n\t\tDim theKeyboardResponseData As KeyboardResponseData\n\t\tDim theKeyboardPreviousResponseData As KeyboardResponseData\n\t\t\t\n\t\tSet theKeyboardResponseData = CKeyboardResponseData(theResponseObject.InputMasks.Responses(nIndex))\n\t\t\n\t\tif nIndex > 1 then\n\t\t\tSet theKeyboardPreviousResponseData = CKeyboardResponseData(theResponseObject.InputMasks.Responses(nIndex-1))\n\t\t\tDebug.Print \"Previous \" & theKeyboardPreviousResponseData.RT\n\t\tEnd if\n\n\n\t\tIf Not theKeyboardResponseData Is Nothing Then\n\n\t\t\t'Increment the press count\n\t\t\tnPressCount = nPressCount + 1\n\n\tDebug.Print \"press number after sum \" & nPressCount\n\n\t\t\t'Log reaction time and response for each key press.\n\t\t\tc.SetAttrib \"KeyPress\" & nIndex & \"RT\", theKeyboardResponseData.RT\n\t\t\tc.SetAttrib \"KeyPress\" & nIndex & \"RESP\", theKeyboardResponseData.RESP\n\t\t\tDebug.Print theKeyboardResponseData.RESP\n\t\t\tDebug.Print \"Current \" & theKeyboardResponseData.RT\n\t\t\t\n\t\t\n\t\tEnd If\n\n' THE PROBLEM WITH THE FOLLOWING PIECE OF CODE IS THAT IT ONLY RUNS\n' AT THE END OF THE TRIALPROC SO IT SHOWS AND HIDE CLOCK \n\nDim lnShowClockStartTime as Long\nDim lnShowClockEndTime as Long\n\n'Dim nClicks As Integer 'number of responses\n'Dim ifWasClicked As integer\n'Dim ifWasClicked As ResponseDataCollection\n\n\n'ifWasClicked = 0\n'nClicks = ClockSlide.InputMasks(1).Responses.Count\n'set ifWasClicked = ClockSlide.InputMasks(1).Responses\n\n' Detect if the key \"c\" was pressed. change height of slides if it is so\n'If theKeyboardResponseData.RESP = \"c\" Then\n'If ifWasClicked > 0 Then\n'if theKeyboardResponseData.RT\n'\tDebug.Print \"clock time when c was pressed: \" & lnMinutes & \":\" &lnSeconds \n'\tDebug.Print \"c was pressed at time: \" & ClockSlide.RTTime\n\n\t\n'\tlnShowClockStartTime = Clock.Read\n'\tDebug.Print \"Time it shows clock \" & lnShowClockStartTime\n\n\n'\tlnShowClockEndTime = lnShowClockStartTime + 1000\n'\tDebug.Print \"Time clock should dissapear \" & lnShowClockEndTime\n\n'\tShowWords.Height = \"50%\" '\"100%\"\n'\tShowWords.Y = \"bottom\" '\"center\"\n'\tShowWords.YAlign = \"bottom\" '\"center\"\n'\tShowWords.AlignVertical = \"top\" '\"center\"\n\n'\tDelayMask.Height = \"50%\" '\"100%\" \n'\tDelayMask.Y = \"bottom\" '\"center\"\n'\tDelayMask.YAlign = \"bottom\" '\"center\"\n'\tDelayMask.AlignVertical = \"top\" '\"center\"\n\n\t'Reset c to none in ClockSlide to allow receive a new response\n\t' The line below doesn't work as I want\n'\tClockSlide.RESP = \" \" ' this work only to hide the clock but doesn't allow for a new response \n\n\t\n\tDebug.Print \"================= end ======================== \"\n\t\n\t'ClockSlide.InputMasks.IsPending() = true\n\t'ifWasClicked = 0\n\n\t\n'End If\n\n\n\n\tNext 'nIndex\n\tSet theResponseObject = Nothing\n"
Name="MultipleResponses"
TypeName="InLine"
Tag=""
Notes=""

[Object18]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_VersionPersist=1
Code="\t' Global variables are defined in the user script\n\t\n'\tDebug.Print \"+++++++++++++++++++++++++++++++++++++\"\n\t\n\t\n\t' Create object to collect responses from ClockSlide\n'\tDim theResponseObject As RteRunnableInputObject\n'\tSet theResponseObject = CRteRunnableInputObject(Rte.GetObject(\"ClockSlide\"))\n\n\t' If the assert below fires, then the object named in the line above does not exist\n'\tDebug.Assert Not theResponseObject Is Nothing\n\n\t' Update counter \n'\tnIndex = theResponseObject.InputMasks.Responses.Count\n\t\n\t'Debug.Print \"nIndex = \" & nIndex\n\t\n\t'==================================================================\n\t' Detect new response\n\t'==================================================================\t\n\t'If the counts do not match, there is a response to process\n'\tIf nIndex <> CompareIndex Then \n'\t\tDebug.Print \"----------------- begin clock trial ------------------\"\n'\t\tDebug.Print \"NEW CLOCK TRIAL\"\n'\t\tDebug.Print \"EXECUTE CODE FOR THE \" & nIndex & \" TIME\" \n\t\t\n\t\t'Declare variables to show and hide the clock\n'\t\tDim lnShowClock as Long\n'\t\tDim lnHideClock as Long\n\t\n\t\t' Declare objects to store Response data \n'\t\tDim theKeyboardResponseData As KeyboardResponseData\n'\t\tDim theKeyboardPreviousResponseData As KeyboardResponseData\n\t\n\t\t'Set theKeyboardResponseData equal to the current keyboard response\n'\t\tSet theKeyboardResponseData = CKeyboardResponseData(theResponseObject.InputMasks.Responses(nIndex))\n\t\t\n\t\t'==================================================================\n\t\t' Store Clock Responses\n\t\t'==================================================================\n\t\t\n'\t\t'Log reaction time and response for each key press.\t\n'\t\tIf Not theKeyboardResponseData Is Nothing Then\n'\t\t\tc.SetAttrib \"ClockCheck.RT\", theKeyboardResponseData.RT\n'\t\t\tc.SetAttrib \"ClockCheck.RTTime\", theKeyboardResponseData.RTTime\n'\t\t\tc.SetAttrib \"ClockCheck.RESP\", theKeyboardResponseData.RESP\n'\t\tEnd If\n\n'\t\tDebug.Print \"RESP \" & theKeyboardResponseData.RESP\n'\t\tDebug.Print \"RT \" & theKeyboardResponseData.RT\n'\n'\t\tlnShowClock = theKeyboardResponseData.RTTime\n'\t\tlnHideClock = theKeyboardResponseData.RTTime + 1000\n'\t\tDebug.Print \"Time clock should be shown \" & lnShowClock\n'\t\tDebug.Print \"Time clock should be gone \" & lnHideClock\n\n\t\t' Set Compare Index equal to nIndex\t(to be able to detect a new response)\t\n'\t\tCompareIndex = nIndex\n\n'\t\tset theKeyboardResponseData = nothing ' I do these to prevent errors (I read somewhere) \n'\t\tSet theResponseObject = Nothing ' I do these to prevent errors (I read somewhere) \n ' \n\n'\t\tDebug.Print \"compare index is \" & CompareIndex\n'\t    Debug.Print \"current index is \" & nIndex\n'\t\tDebug.Print \"================= end clock trial ======================== \"\n\n\t\t'==================================================================\n\t\t' Show Clock\n\t\t'==================================================================\n'\t\tDebug.Print \"Time clock is shown \" & Clock.Read\n\t\t\n\n'\t\tShowWords.Height = \"50%\" '\"100%\"\n'\t\tShowWords.Y = \"bottom\" '\"center\"\n'\t\tShowWords.YAlign = \"bottom\" '\"center\"\n'\t\tShowWords.AlignVertical = \"top\" '\"center\"\n\n'\t\tDelayMask.Height = \"50%\" '\"100%\" \n'\t\tDelayMask.Y = \"bottom\" '\"center\"\n'\t\tDelayMask.YAlign = \"bottom\" '\"center\"\n'\t\tDelayMask.AlignVertical = \"top\" '\"center\"\n\n\n\t\t\n'\tEnd If\n\n'==================================================================\n' Hide Clock\n'==================================================================\n\n' Restore height of the slides to hide clock\n'\tIf ShowWords.Height = \"50%\" AND Clock.Read > lnHideClock Then\n'\t\tDebug.Print \"Time clock is gone \" & Clock.Read\n'\t\tShowWords.Height = \"100%\"\n'\t\tShowWords.Y = \"center\"\n'\t\tShowWords.YAlign = \"center\"\n'\t\tShowWords.AlignVertical = \"center\"\n\n'\t\tDelayMask.Height = \"100%\" \n'\t\tDelayMask.Y = \"center\"\n'\t\tDelayMask.YAlign = \"center\"\n'\t\tDelayMask.AlignVertical = \"center\"\n\n'\tEnd If\n\n\n\n\n"
Name="MultRespDisplClock"
TypeName="InLine"
Tag=""
Notes=""

[Object19]
_Version=131072
_ExtentX=2646
_ExtentY=1323
_StockProps=0
VersionMajor=1
VersionMinor=1
VersionInternal=4
VersionBuild=1
_VersionPersist=1
Code="'Dim endTime as Long\n'endTime = Clock.Read + 2000\n\n'Dim MaskWord as Long\n'MaskWord = \n\n' Wait until input is received or until max time hasexpired\n\n'Do\n\n'Loop Until NOT Clock.Read >= endTime\n"
Name="ResponseDelay"
TypeName="InLine"
Tag=""
Notes=""

[UserScript]
'================================================================
' Declate global variables for the clock

' These variables will be used many times during the TrialProc
' I don't want to declare them everytime
'================================================================
'================================================================

' Key press counter	
	'Dim nIndex as Integer 
' Used to evaluate if there is a new Response to process
	Dim CompareIndex as Integer

'Declare variables to show and hide the clock
	Dim lnShowClock as Long
	Dim lnHideClock as Long
	

